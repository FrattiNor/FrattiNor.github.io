<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FrattiNor&#39;s Bolg</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-10T12:30:54.382Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>FrattiNor</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript对象和原型链（_proto_和prototype的区别）</title>
    <link href="http://yoursite.com/2018/10/27/JavaScript%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
    <id>http://yoursite.com/2018/10/27/JavaScript对象和原型链/</id>
    <published>2018-10-27T06:57:18.786Z</published>
    <updated>2018-10-10T12:30:54.382Z</updated>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;JavaScript对象和原型链&quot;&gt;&lt;a href=&quot;#JavaScript对象和原型链&quot; class=&quot;headerlink&quot; title=&quot;JavaScript对象和原型链&quot;&gt;&lt;/a&gt;&lt;strong&gt;JavaScript对象和原型链&lt;/strong&gt;
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript函数式编程和函数柯里化</title>
    <link href="http://yoursite.com/2018/10/27/JavaScript%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96/"/>
    <id>http://yoursite.com/2018/10/27/JavaScript函数式编程和函数柯里化/</id>
    <published>2018-10-27T06:57:18.783Z</published>
    <updated>2018-10-09T12:18:36.504Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;JavaScript函数式编程和函数柯里化&quot;&gt;&lt;a href=&quot;#JavaScript函数式编程和函数柯里化&quot; class=&quot;headerlink&quot; title=&quot;JavaScript函数式编程和函数柯里化&quot;&gt;&lt;/a&gt;JavaScript函数式编程和函数柯里化&lt;/
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS3 @media</title>
    <link href="http://yoursite.com/2018/10/27/CSS3%20@media/"/>
    <id>http://yoursite.com/2018/10/27/CSS3 @media/</id>
    <published>2018-10-27T06:57:18.780Z</published>
    <updated>2018-10-09T12:27:29.969Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CSS3-media&quot;&gt;&lt;a href=&quot;#CSS3-media&quot; class=&quot;headerlink&quot; title=&quot;CSS3 @media&quot;&gt;&lt;/a&gt;CSS3 @media&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;可视区域的宽度大于960px小于1200px设置body的背景
      
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS Gradient和Background</title>
    <link href="http://yoursite.com/2018/10/27/CSS%20Gradient%E5%92%8CBackground/"/>
    <id>http://yoursite.com/2018/10/27/CSS Gradient和Background/</id>
    <published>2018-10-27T06:57:18.777Z</published>
    <updated>2018-10-19T12:05:30.265Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CSS-Gradient和Background&quot;&gt;&lt;a href=&quot;#CSS-Gradient和Background&quot; class=&quot;headerlink&quot; title=&quot;CSS Gradient和Background&quot;&gt;&lt;/a&gt;CSS Gradient和Back
      
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>学习JS基础数据类型和引用数据类型，内存空间管理</title>
    <link href="http://yoursite.com/2018/10/27/2018_8_26_2_%E5%AD%A6%E4%B9%A0JS%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/10/27/2018_8_26_2_学习JS基础数据类型和引用数据类型，内存空间管理/</id>
    <published>2018-10-27T06:57:18.775Z</published>
    <updated>2018-08-26T07:06:03.323Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;基础数据类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JavaScript的执行上下文生成之后会创建变量对象的特殊对象。&lt;br&gt;JavaScript的基础数据类型都保存在变量对象中。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;严格意义上来说，变量对象也是存放在推内存中的。&lt;/em&gt;&lt;/
      
    
    </summary>
    
    
      <category term="JS的数据类型" scheme="http://yoursite.com/tags/JS%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
      <category term="JS的内存空间管理" scheme="http://yoursite.com/tags/JS%E7%9A%84%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>学习JavaScript的内存空间和事件循环</title>
    <link href="http://yoursite.com/2018/10/27/2018_8_26_1_%E5%AD%A6%E4%B9%A0JavaScript%E7%9A%84%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
    <id>http://yoursite.com/2018/10/27/2018_8_26_1_学习JavaScript的内存空间和事件循环/</id>
    <published>2018-10-27T06:57:18.772Z</published>
    <updated>2018-08-26T06:23:08.000Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;JavaScript具有垃圾回收机制，所以对于前端开发来说，内存空间不是一个经常被提起的概念。所以我对于内存空间的了解也是非常的模糊。&lt;/p&gt;
&lt;p&gt;学习内存空间，需要对堆，栈和队列有基本的了解&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;栈&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;栈和堆，可以
      
    
    </summary>
    
    
      <category term="JS的内存空间了" scheme="http://yoursite.com/tags/JS%E7%9A%84%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E4%BA%86/"/>
    
      <category term="JS的事件循环" scheme="http://yoursite.com/tags/JS%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>学习DvaJS，JS的this和解耦</title>
    <link href="http://yoursite.com/2018/10/27/2018_7_21_1_DvaJS%E5%AD%A6%E4%B9%A0%E5%92%8CJS%E7%9A%84this%E4%BB%A5%E5%8F%8A%E8%A7%A3%E8%80%A6%E6%A6%82%E5%BF%B5/"/>
    <id>http://yoursite.com/2018/10/27/2018_7_21_1_DvaJS学习和JS的this以及解耦概念/</id>
    <published>2018-10-27T06:57:18.769Z</published>
    <updated>2018-07-24T12:38:17.558Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;h3&gt;学习DvaJS&lt;/h3&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在我看来&lt;strong&gt;DvaJS&lt;/strong&gt;相当是于集成了&lt;code&gt;Redux&lt;/code&gt;，&lt;code&gt;Router&lt;/code&gt;和&lt;code&gt;Fetch&lt;/code&gt;的状态管理器
      
    
    </summary>
    
    
      <category term="DvaJS" scheme="http://yoursite.com/tags/DvaJS/"/>
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>Redux学习（四）-- Providor和connect学习</title>
    <link href="http://yoursite.com/2018/10/27/2018_6_7_1_redux%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2018/10/27/2018_6_7_1_redux学习（四）/</id>
    <published>2018-10-27T06:57:18.764Z</published>
    <updated>2018-06-07T14:35:35.332Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本来不用Providor和connect也是可以实现store的改变的，但是今天在写播放器的时候遇到了在改变store的时候重新渲染DOM，所以就需要用到Providor和connect了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Providor&lt;/strong&gt;&lt;/p&gt;
&lt;figu
      
    
    </summary>
    
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>Redux学习（三）</title>
    <link href="http://yoursite.com/2018/10/27/2018_6_2_2_redux%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://yoursite.com/2018/10/27/2018_6_2_2_redux学习（三）/</id>
    <published>2018-10-27T06:57:18.760Z</published>
    <updated>2018-06-02T08:15:09.930Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;已经用redux写了一个计数器了，也对redux有了个大概的了解，所以前面的导航栏组件共用状态问题也已经解决了。&lt;br&gt;但还是有一个问题就是redux的store每次要使用都要重新引入过吗，vuex的话，感觉更加可以理解一点，在入口处定义store后，子组件就可以通过$st
      
    
    </summary>
    
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>Redux学习（二）</title>
    <link href="http://yoursite.com/2018/10/27/2018_6_2_1_redux%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2018/10/27/2018_6_2_1_redux学习（二）/</id>
    <published>2018-10-27T06:57:18.755Z</published>
    <updated>2018-06-02T07:51:23.046Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天学习了redux的基本知识，总感觉很迷糊。&lt;br&gt;大概就是action，reducers和store&lt;br&gt;今天跟着写了一个小例子大概有点了解了&lt;br&gt;今天写了一个计数器，大概的意思就是取出store的值，然后通过action来改变store的值&lt;br&gt;总的来说redu
      
    
    </summary>
    
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>Redux学习</title>
    <link href="http://yoursite.com/2018/10/27/2018_6_1_1_redux%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/10/27/2018_6_1_1_redux学习/</id>
    <published>2018-10-27T06:57:18.750Z</published>
    <updated>2018-06-02T05:52:19.433Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;现在还在写react-music这个的推荐页面，最近使用qq音乐的api访问资源时都是受限的，只能获得一点点数据，然后就一直在找可以用的api，花了很多时间来找api导致现在还在写推荐页面，不过好在，使用了多个api总算是把推荐页面写完了。&lt;br&gt;现在又遇到了一个问题就是点
      
    
    </summary>
    
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>ife_2018 MVVM学院 2-4</title>
    <link href="http://yoursite.com/2018/10/27/2018_5_9_2ife_2018%20MVVM%E5%AD%A6%E9%99%A2%202-4/"/>
    <id>http://yoursite.com/2018/10/27/2018_5_9_2ife_2018 MVVM学院 2-4/</id>
    <published>2018-10-27T06:57:18.746Z</published>
    <updated>2018-05-11T07:30:16.142Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2.4事件处理&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://frattinor.github.io/IFE_2018/mvvm/myDist-2-4/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对mvvm双向绑定以及
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>ife_2018 MVVM学院 2-3</title>
    <link href="http://yoursite.com/2018/10/27/2018_5_9_1ife_2018%20MVVM%E5%AD%A6%E9%99%A2%202-3/"/>
    <id>http://yoursite.com/2018/10/27/2018_5_9_1ife_2018 MVVM学院 2-3/</id>
    <published>2018-10-27T06:57:18.741Z</published>
    <updated>2018-05-11T07:28:23.096Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2.3 样式控制&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://frattinor.github.io/IFE_2018/mvvm/myDist-2-3/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;点击方块，修改方块的
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>ife_2018 MVVM学院 2-2</title>
    <link href="http://yoursite.com/2018/10/27/2018_5_8_1_ife_2018%20MVVM%E5%AD%A6%E9%99%A2%202-2/"/>
    <id>http://yoursite.com/2018/10/27/2018_5_8_1_ife_2018 MVVM学院 2-2/</id>
    <published>2018-10-27T06:57:18.738Z</published>
    <updated>2018-05-08T15:07:35.000Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2.2 条件和循环&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://frattinor.github.io/IFE_2018/mvvm/myDist-2-2/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用循环指令渲染表
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue项目-豆瓣电影搜索-完善</title>
    <link href="http://yoursite.com/2018/10/27/2018_5_5_3_%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E6%90%9C%E7%B4%A2vue%E9%A1%B9%E7%9B%AE%E6%94%B9%E5%96%84/"/>
    <id>http://yoursite.com/2018/10/27/2018_5_5_3_豆瓣电影搜索vue项目改善/</id>
    <published>2018-10-27T06:57:18.733Z</published>
    <updated>2018-05-05T14:24:00.421Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上次我写了这个豆瓣电影搜索的vue项目，最后完成的时候，发现打包后放到github上，不能获取到ajax的结果，原因呢我具体也不明白，大概就是存在跨域问题，上次我搜索跨域问题怎么解决，都是说反向代理什么的，我完全一脸懵逼啊，今天得知有另一种解决跨域问题的方法jsonp，所以
      
    
    </summary>
    
    
      <category term="vue，jsonp" scheme="http://yoursite.com/tags/vue%EF%BC%8Cjsonp/"/>
    
  </entry>
  
  <entry>
    <title>ife_2018 MVVM学院 2-1</title>
    <link href="http://yoursite.com/2018/10/27/2018_5_5_2_ife_2018_mvvm%E5%AD%A6%E9%99%A2_2.1/"/>
    <id>http://yoursite.com/2018/10/27/2018_5_5_2_ife_2018_mvvm学院_2.1/</id>
    <published>2018-10-27T06:57:18.729Z</published>
    <updated>2018-05-05T14:06:25.668Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ife 的 mvvm使用的是百度的san框架，我不太了解，同时这个也不太火，所以我还是使用我在学习的vue框架&lt;/p&gt;
&lt;p&gt;1.x是看文档和安装环境我就没做了&lt;/p&gt;
&lt;p&gt;2.1 数据操作&lt;br&gt;1参考下方设计图，使用san实现一个功能&lt;br&gt;2输入姓名、年龄和简介信息
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>ife_2018 设计师学院 No.7</title>
    <link href="http://yoursite.com/2018/10/27/2018_5_5_1_ife_2018_%E8%AE%BE%E8%AE%A1%E5%B8%88%E5%AD%A6%E9%99%A2_No.7/"/>
    <id>http://yoursite.com/2018/10/27/2018_5_5_1_ife_2018_设计师学院_No.7/</id>
    <published>2018-10-27T06:57:18.724Z</published>
    <updated>2018-05-05T13:55:07.151Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;No.7 - 使用 animate.css 实现一个优雅的登录框&lt;/p&gt;
&lt;p&gt;任务七&lt;br&gt;&lt;a href=&quot;https://frattinor.github.io/IFE_2018/css/No.7/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;de
      
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>ife_2018 设计师学院 No.6</title>
    <link href="http://yoursite.com/2018/10/27/2018_5_4_2_ife_2018_%E8%AE%BE%E8%AE%A1%E5%B8%88%E5%AD%A6%E9%99%A2_No.6/"/>
    <id>http://yoursite.com/2018/10/27/2018_5_4_2_ife_2018_设计师学院_No.6/</id>
    <published>2018-10-27T06:57:18.719Z</published>
    <updated>2018-05-05T13:42:55.520Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;No.6 - 利用 CSS animation 制作一个炫酷的 Slider&lt;/p&gt;
&lt;p&gt;任务六&lt;br&gt;&lt;a href=&quot;https://frattinor.github.io/IFE_2018/css/No.6/&quot; target=&quot;_blank&quot; rel=&quot;noopen
      
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>ife_2018 设计师学院 No.5</title>
    <link href="http://yoursite.com/2018/10/27/2018_5_4_1_ife_2018_%E8%AE%BE%E8%AE%A1%E5%B8%88%E5%AD%A6%E9%99%A2_No.5/"/>
    <id>http://yoursite.com/2018/10/27/2018_5_4_1_ife_2018_设计师学院_No.5/</id>
    <published>2018-10-27T06:57:18.715Z</published>
    <updated>2018-05-05T13:26:53.016Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;No.5 - 纯 CSS 制作绕中轴旋转的立方体&lt;/p&gt;
&lt;p&gt;任务五&lt;br&gt;&lt;a href=&quot;https://frattinor.github.io/IFE_2018/css/No.5/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;&lt;/
      
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>ife_2018 设计师学院 No.4</title>
    <link href="http://yoursite.com/2018/10/27/2018_5_3_3_ife_2018_%E8%AE%BE%E8%AE%A1%E5%B8%88%E5%AD%A6%E9%99%A2_No.4/"/>
    <id>http://yoursite.com/2018/10/27/2018_5_3_3_ife_2018_设计师学院_No.4/</id>
    <published>2018-10-27T06:57:18.709Z</published>
    <updated>2018-05-03T13:54:51.390Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;No.4 - 3D 空间的卡片翻转动效&lt;/p&gt;
&lt;p&gt;任务四&lt;br&gt;&lt;a href=&quot;https://frattinor.github.io/IFE_2018/css/No.4/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
</feed>
