<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FrattiNor&#39;s Bolg</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-08T12:43:16.261Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>FrattiNor</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/10/08/CSS3%20@media/"/>
    <id>http://yoursite.com/2018/10/08/CSS3 @media/</id>
    <published>2018-10-08T12:43:47.680Z</published>
    <updated>2018-10-08T12:43:16.261Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CSS3-media&quot;&gt;&lt;a href=&quot;#CSS3-media&quot; class=&quot;headerlink&quot; title=&quot;##CSS3 @media&quot;&gt;&lt;/a&gt;##CSS3 @media&lt;/h2&gt;&lt;p&gt;可视区域的宽度大于960px小于1200px设置body的背景颜
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/10/08/JavaScript%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96/"/>
    <id>http://yoursite.com/2018/10/08/JavaScript函数式编程和函数柯里化/</id>
    <published>2018-10-08T12:43:47.675Z</published>
    <updated>2018-10-08T12:43:15.578Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;##JavaScript函数式编程和函数柯里化&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;关于函数在实际开发中的应用，大体可以总结为函数声明、函数表达式、匿名函数、自执行函数。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;函数声明&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaScript中，有两种声
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>学习JavaScript的内存空间和事件循环</title>
    <link href="http://yoursite.com/2018/08/26/2018_8_26_1_%E5%AD%A6%E4%B9%A0JavaScript%E7%9A%84%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
    <id>http://yoursite.com/2018/08/26/2018_8_26_1_学习JavaScript的内存空间和事件循环/</id>
    <published>2018-08-26T07:07:22.959Z</published>
    <updated>2018-08-26T06:23:08.000Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;JavaScript具有垃圾回收机制，所以对于前端开发来说，内存空间不是一个经常被提起的概念。所以我对于内存空间的了解也是非常的模糊。&lt;/p&gt;
&lt;p&gt;学习内存空间，需要对堆，栈和队列有基本的了解&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;栈&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;栈和堆，可以
      
    
    </summary>
    
    
      <category term="JS的内存空间了" scheme="http://yoursite.com/tags/JS%E7%9A%84%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E4%BA%86/"/>
    
      <category term="JS的事件循环" scheme="http://yoursite.com/tags/JS%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>学习JS基础数据类型和引用数据类型，内存空间管理</title>
    <link href="http://yoursite.com/2018/08/26/2018_8_26_2_%E5%AD%A6%E4%B9%A0JS%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/08/26/2018_8_26_2_学习JS基础数据类型和引用数据类型，内存空间管理/</id>
    <published>2018-08-26T07:07:22.957Z</published>
    <updated>2018-08-26T07:06:03.323Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;基础数据类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JavaScript的执行上下文生成之后会创建变量对象的特殊对象。&lt;br&gt;JavaScript的基础数据类型都保存在变量对象中。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;严格意义上来说，变量对象也是存放在推内存中的。&lt;/em&gt;&lt;/
      
    
    </summary>
    
    
      <category term="JS的数据类型" scheme="http://yoursite.com/tags/JS%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
      <category term="JS的内存空间管理" scheme="http://yoursite.com/tags/JS%E7%9A%84%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>学习DvaJS，JS的this和解耦</title>
    <link href="http://yoursite.com/2018/07/21/2018_7_21_1_DvaJS%E5%AD%A6%E4%B9%A0%E5%92%8CJS%E7%9A%84this%E4%BB%A5%E5%8F%8A%E8%A7%A3%E8%80%A6%E6%A6%82%E5%BF%B5/"/>
    <id>http://yoursite.com/2018/07/21/2018_7_21_1_DvaJS学习和JS的this以及解耦概念/</id>
    <published>2018-07-21T13:49:28.703Z</published>
    <updated>2018-07-24T12:38:17.558Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;h3&gt;学习DvaJS&lt;/h3&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在我看来&lt;strong&gt;DvaJS&lt;/strong&gt;相当是于集成了&lt;code&gt;Redux&lt;/code&gt;，&lt;code&gt;Router&lt;/code&gt;和&lt;code&gt;Fetch&lt;/code&gt;的状态管理器
      
    
    </summary>
    
    
      <category term="DvaJS" scheme="http://yoursite.com/tags/DvaJS/"/>
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>Redux学习（四）-- Providor和connect学习</title>
    <link href="http://yoursite.com/2018/06/07/2018_6_7_1_redux%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2018/06/07/2018_6_7_1_redux学习（四）/</id>
    <published>2018-06-07T14:35:35.002Z</published>
    <updated>2018-06-07T14:35:35.332Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本来不用Providor和connect也是可以实现store的改变的，但是今天在写播放器的时候遇到了在改变store的时候重新渲染DOM，所以就需要用到Providor和connect了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Providor&lt;/strong&gt;&lt;/p&gt;
&lt;figu
      
    
    </summary>
    
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>Redux学习（三）</title>
    <link href="http://yoursite.com/2018/06/02/2018_6_2_2_redux%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://yoursite.com/2018/06/02/2018_6_2_2_redux学习（三）/</id>
    <published>2018-06-02T08:15:09.735Z</published>
    <updated>2018-06-02T08:15:09.930Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;已经用redux写了一个计数器了，也对redux有了个大概的了解，所以前面的导航栏组件共用状态问题也已经解决了。&lt;br&gt;但还是有一个问题就是redux的store每次要使用都要重新引入过吗，vuex的话，感觉更加可以理解一点，在入口处定义store后，子组件就可以通过$st
      
    
    </summary>
    
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>Redux学习（二）</title>
    <link href="http://yoursite.com/2018/06/02/2018_6_2_1_redux%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2018/06/02/2018_6_2_1_redux学习（二）/</id>
    <published>2018-06-02T07:51:22.799Z</published>
    <updated>2018-06-02T07:51:23.046Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天学习了redux的基本知识，总感觉很迷糊。&lt;br&gt;大概就是action，reducers和store&lt;br&gt;今天跟着写了一个小例子大概有点了解了&lt;br&gt;今天写了一个计数器，大概的意思就是取出store的值，然后通过action来改变store的值&lt;br&gt;总的来说redu
      
    
    </summary>
    
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>Redux学习</title>
    <link href="http://yoursite.com/2018/06/02/2018_6_1_1_redux%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/06/02/2018_6_1_1_redux学习/</id>
    <published>2018-06-02T05:52:19.094Z</published>
    <updated>2018-06-02T05:52:19.433Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;现在还在写react-music这个的推荐页面，最近使用qq音乐的api访问资源时都是受限的，只能获得一点点数据，然后就一直在找可以用的api，花了很多时间来找api导致现在还在写推荐页面，不过好在，使用了多个api总算是把推荐页面写完了。&lt;br&gt;现在又遇到了一个问题就是点
      
    
    </summary>
    
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>React-music（二）</title>
    <link href="http://yoursite.com/2018/05/30/2018_5_29_1_react-music%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2018/05/30/2018_5_29_1_react-music（二）/</id>
    <published>2018-05-30T04:56:07.818Z</published>
    <updated>2018-05-30T04:55:08.933Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;继续写music-player项目&lt;br&gt;我又发现一个容易出错的地方，就是组件import的首字母必须大写，不然无效&lt;/p&gt;
&lt;p&gt;写完头和导航栏，这几天写轮播图又有一个问题就是ajax获取数据然后传给state后不能渲染到DOM里。&lt;br&gt;然后我就看了别人项目的代码吧，算
      
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>React-music</title>
    <link href="http://yoursite.com/2018/05/26/2018_5_26_1_react-music%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2018/05/26/2018_5_26_1_react-music（一）/</id>
    <published>2018-05-26T08:10:43.741Z</published>
    <updated>2018-05-26T08:10:43.952Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本来这个 &lt;code&gt;music-player&lt;/code&gt; 的项目是打算看着vue视频，用vue来写的，后来因为要学react，所以就把原项目用react来写了。vue-music已经写了顶部，导航栏以及部分推荐页面。&lt;/p&gt;
&lt;p&gt;所以就直接把写好的部分移植过来就好了&lt;
      
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>React-router</title>
    <link href="http://yoursite.com/2018/05/25/2018_5_25_2_react-router%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/05/25/2018_5_25_2_react-router学习/</id>
    <published>2018-05-25T10:17:35.519Z</published>
    <updated>2018-05-25T10:17:35.745Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;react-router应该是react的路由插件吧，就跟vue-router一样，用来实现页面的跳转功能&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;br&gt;React Router已被拆分成三个包：react-router,react-router-dom和re
      
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>无缝轮播图</title>
    <link href="http://yoursite.com/2018/05/25/2018_5_25_1_%E6%97%A0%E7%BC%9D%E8%BD%AE%E6%92%AD%E5%9B%BE/"/>
    <id>http://yoursite.com/2018/05/25/2018_5_25_1_无缝轮播图/</id>
    <published>2018-05-25T08:34:07.527Z</published>
    <updated>2018-05-25T08:34:07.719Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://frattinor.github.io/practice/RotationMap/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;&lt;br&gt;昨天想做一个轮播图，无缝的那种，然后就想了一种办法&lt;br&gt;首先我原来
      
    
    </summary>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>css定义高宽成比例</title>
    <link href="http://yoursite.com/2018/05/24/2018_5_24_2_css%E5%81%9Adiv%E9%AB%98%E5%AE%BD%E6%88%90%E6%AF%94%E4%BE%8B/"/>
    <id>http://yoursite.com/2018/05/24/2018_5_24_2_css做div高宽成比例/</id>
    <published>2018-05-24T12:33:53.969Z</published>
    <updated>2018-05-24T12:33:54.168Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天突然想写一个无缝的轮播图了，因为以前写的轮播图都不是无缝的，在结尾的地方会回滚回第一张图，所以就想试试除了设置外边距的方法来解决这个办法。&lt;br&gt;然后我就想啊，用绝对定位来把图片都放一起，然后要用到什么图片就给什么图片添加动画就好，然后发现一个问题，因为是绝对定位，所以
      
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>react学习</title>
    <link href="http://yoursite.com/2018/05/24/2018_5_24_1_React%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/05/24/2018_5_24_1_React学习/</id>
    <published>2018-05-24T11:38:47.179Z</published>
    <updated>2018-05-24T11:38:47.485Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;React&lt;br&gt;React 是一个用于构建用户界面的 JAVASCRIPT 库&lt;br&gt;React主要用于构建UI&lt;br&gt;React 拥有较高的性能，代码逻辑非常简单&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;React 特点&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;声明式设计 −
      
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>less学习</title>
    <link href="http://yoursite.com/2018/05/17/2018_5_17_2_less%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/05/17/2018_5_17_2_less学习/</id>
    <published>2018-05-17T06:55:59.670Z</published>
    <updated>2018-05-17T06:55:59.829Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Less 是一门 CSS 预处理语言，它扩充了 CSS 语言，增加了诸如变量、混合（mixin）、函数等功能，让 CSS 更易维护、方便制作主题、扩充。&lt;/p&gt;
&lt;p&gt;Less 可以通过 npm 在命令行上运行；在浏览器上作为脚本文件下载；或者集成在广大的第三方工具内。&lt;/
      
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
      <category term="less" scheme="http://yoursite.com/tags/less/"/>
    
  </entry>
  
  <entry>
    <title>ES6学习（二）</title>
    <link href="http://yoursite.com/2018/05/17/2018_5_17_1_ES6%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2018/05/17/2018_5_17_1_ES6学习（二）/</id>
    <published>2018-05-17T06:14:24.089Z</published>
    <updated>2018-05-17T06:14:24.244Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ES6新特性&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.箭头操作符（=&amp;gt;）&lt;/strong&gt;&lt;br&gt;操作符左边为输入的参数，而右边则是进行的操作以及返回的值Inputs=&amp;gt;outputs。&lt;br&gt;&lt;strong&gt;2.类的支持&lt;/strong&gt;&lt;br&gt;ES6中添加了对类的
      
    
    </summary>
    
    
      <category term="ECMAScript 6" scheme="http://yoursite.com/tags/ECMAScript-6/"/>
    
  </entry>
  
  <entry>
    <title>ES6学习</title>
    <link href="http://yoursite.com/2018/05/17/2018_5_15_1_ES6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/05/17/2018_5_15_1_ES6学习/</id>
    <published>2018-05-17T06:03:57.765Z</published>
    <updated>2018-05-17T06:03:57.980Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ES6学习&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.let&lt;/strong&gt;&lt;br&gt;let与var都是变量声明的方式&lt;br&gt;let与var的区别&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;let是只在块级作用域（花括号）起作用&lt;/li&gt;
&lt;li&gt;let不存在变量提升&lt;br&gt;“函数声明和变量声明总
      
    
    </summary>
    
    
      <category term="ECMAScript 6" scheme="http://yoursite.com/tags/ECMAScript-6/"/>
    
  </entry>
  
  <entry>
    <title>ife_2018 MVVM学院 3-1</title>
    <link href="http://yoursite.com/2018/05/11/2018_5_10_1ife_2018%20MVVM%E5%AD%A6%E9%99%A2%203-1/"/>
    <id>http://yoursite.com/2018/05/11/2018_5_10_1ife_2018 MVVM学院 3-1/</id>
    <published>2018-05-11T07:44:51.597Z</published>
    <updated>2018-05-11T07:44:51.771Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;3.1 用递归的方式实现级联组件&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://frattinor.github.io/IFE_2018/mvvm/myDist-3-1/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;实现
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>ife_2018 MVVM学院 2-4</title>
    <link href="http://yoursite.com/2018/05/11/2018_5_9_2ife_2018%20MVVM%E5%AD%A6%E9%99%A2%202-4/"/>
    <id>http://yoursite.com/2018/05/11/2018_5_9_2ife_2018 MVVM学院 2-4/</id>
    <published>2018-05-11T07:30:15.956Z</published>
    <updated>2018-05-11T07:30:16.142Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2.4事件处理&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://frattinor.github.io/IFE_2018/mvvm/myDist-2-4/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对mvvm双向绑定以及
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
</feed>
